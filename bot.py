import asyncio
import os
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters import Command
import httpx

TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=TOKEN, parse_mode="HTML")
dp = Dispatcher()

keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üí∞ –ü–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å", callback_data="get_price")]
])

@dp.message(Command("start"))
async def start_handler(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

@dp.callback_query()
async def handle_callback(callback: types.CallbackQuery):
    if callback.data == "get_price":
        await callback.message.edit_text("‚è≥ –ü–æ–ª—É—á–∞—é —Ü–µ–Ω—É...")
        offers = await fetch_p2p_data()
        if offers:
            avg_price = round(sum(offers) / len(offers), 2)
            await callback.message.edit_text(f"–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ —Å 6 –ø–æ 11 —Å—Ç—Ä–æ–∫—É: <b>{avg_price} RUB</b>")
        else:
            await callback.message.edit_text("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É.")

async def fetch_p2p_data():
    url = "https://api2.bybit.com/fiat/otc/item/online"
    payload = {
        "userId": "",
        "tokenId": "USDT",
        "currencyId": "RUB",
        "payment": ["Local Green Bank"],
        "side": "1",
        "size": "",
        "page": 1,
        "rows": 20,
        "amount": "",
        "authMaker": False
    }
    try:
        async with httpx.AsyncClient(timeout=10) as client:
            response = await client.post(url, json=payload)
            data = response.json()
            items = data.get("result", {}).get("items", [])
            prices = [float(item["price"]) for item in items[5:11]]
            return prices
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", e)
        return []

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())